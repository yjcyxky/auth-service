version: '3.4'

x-kong-config: &kong-env
  KONG_DATABASE: postgres
  KONG_PG_HOST: database
  KONG_PG_PORT: 5432
  KONG_PG_DATABASE: kong
  KONG_PG_USER: postgres
  KONG_PG_PASSWORD: ${POSTGRES_PASSWORD}

networks: 
  biominer-lab-network:
    external:
      name: biominer-lab-network

services:
  database:
    image: postgres:11-alpine
    volumes:
      - ${DATA_DIR}/database:/var/lib/postgresql/data
      - ${DATA_DIR}/conf/docker-entrypoint-initdb.d:/docker-entrypoint-initdb.d
    networks:
      - biominer-lab-network
    ports:
      - "${EXTERNAL_DB_PORT}:5432"
    environment:
      POSTGRES_PASSWORD:    ${POSTGRES_PASSWORD}
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 10s
      timeout: 5s
      retries: 5
    restart: on-failure

  kong:
    build:
      context: ./docker
    image: kong-custom-plugins:latest
    depends_on:
      database:
        condition: service_healthy
    volumes:
      - ${DATA_DIR}/kong/docker-entrypoint.sh:/docker-entrypoint.sh
      # Temporary solution to extract user profile data from the access token
      # Need to release as a custom plugin and replace token-to-header-extractor plugin
      - ./lua/token-extractor-handler.lua:/usr/local/share/lua/5.1/kong/plugins/token-to-header-extractor/handler.lua
    networks:
      - biominer-lab-network
    ports:
      - "${KONG_PORT}:8000" # Listener
      - "${KONG_ADMIN_PORT}:8001" # Admin API
      - "${KONG_HTTPS_PORT}:8443" # Listener  (SSL)
      - "${KONG_ADMIN_HTTPS_PORT}:8444" # Admin API (SSL)
    environment:
      <<: *kong-env
      KONG_PROXY_ACCESS_LOG: /dev/stdout
      KONG_ADMIN_ACCESS_LOG: /dev/stdout
      KONG_PROXY_ERROR_LOG:  /dev/stderr
      KONG_ADMIN_ERROR_LOG:  /dev/stderr
      KONG_PROXY_LISTEN:     0.0.0.0:${KONG_PORT}, 0.0.0.0:${KONG_HTTPS_PORT} ssl
      KONG_ADMIN_LISTEN:     0.0.0.0:${KONG_ADMIN_PORT}, 0.0.0.0:${KONG_ADMIN_HTTPS_PORT} ssl
      KONG_PLUGINS:          bundled,oidc,token-to-header-extractor
      KONG_LOG_LEVEL:        error
    restart: on-failure

  konga:
    image: pantsel/konga:0.14.9
    depends_on:
      database:
        condition: service_healthy
    networks:
      - biominer-lab-network
    ports:
      - "1337:1337" # konga
    environment:
      DB_ADAPTER: postgres
      DB_HOST: database
      DB_PORT: '5432'
      DB_USER: postgres
      DB_PASSWORD: ${POSTGRES_PASSWORD}
      DB_DATABASE: kong
      NODE_ENV: production

  keycloak:
    image: quay.io/keycloak/keycloak:17.0.0
    depends_on:
      database:
        condition: service_healthy
    command: start-dev
    networks:
      - biominer-lab-network
    ports:
      - "${KEYCLOAK_PORT}:8080"
    links:
      - database:database
    environment:
      DB_VENDOR: POSTGRES
      DB_ADDR: database
      DB_PORT: 5432
      DB_DATABASE: keycloak
      DB_USER: postgres
      DB_PASSWORD: ${POSTGRES_PASSWORD}
      KEYCLOAK_ADMIN: ${KEYCLOAK_ADMIN}
      KEYCLOAK_ADMIN_PASSWORD: ${KEYCLOAK_ADMIN_PASSWORD}
